theme = "catppuccin_macchiato"

[editor]
# 行号显示: absolute 简单地显示每行的行号，而 relative 显示当前行的距离。当失去焦点或处于插入模式时， relative 仍显示绝对将行号
line-number = "absolute"
cursorline = true
cursorcolumn = true
bufferline = "multiple"
# 用于控制弹出窗口（如自动完成、提示等）周围是否显示边框
popup-border = "all"
auto-completion = true
color-modes = true
# 自动补全替换完整单词，而不是光标前面部分
completion-replace = true
# 行尾后显示诊断的最低严重性 (如果行内指定的最低严重性高时会转换为行内)
end-of-line-diagnostics = "hint"

[editor.statusline]
left = ["mode", "spinner"]
center = ["file-name", "read-only-indicator", "file-modification-indicator"]
right = ["diagnostics", "selections", "position", "file-encoding", "file-type"]
# 用于在状态栏中分隔元素的字符
separator = "│"
mode.normal = "普通模式"
mode.insert = "插入模式"
mode.select = "选择模式"

[editor.lsp]
# 在状态行显示 LSP 进度消息
display-messages = true
# 显示嵌入提示
display-inlay-hints = true

[editor.cursor-shape]
insert = "bar"
# 可能是因为Terminal不支持多光标的缘故
# 所以 block 不使用终端光标(不能用kitty的拖尾了)
# normal = "block"
normal = "underline"
select = "block"

[editor.file-picker]
# 启用忽略隐藏文件
hidden = false

# 垂直缩进线
[editor.indent-guides]
render = true
character = "╎" # Some characters that work well: "▏", "┆", "┊", "⸽"
skip-levels = 1

# 使用可见字符渲染空格的选项
[editor.whitespace.render]
space = "all"
tab = "all"
nbsp = "none"
nnbsp = "none"
newline = "none"

[editor.whitespace.characters]
space = "·"
tab = "→"
newline = ""
tabpad = "·" # Tabs will look like "→···" (depending on tab width)

# 使用软换行
[editor.soft-wrap]
enable = true
# 软折行时，行尾可以留下的最大空闲空间
max-wrap = 25
# 在软折行时，可以保留的最大缩进量
max-indent-retain = 40
# 在软换行的行之前插入的文本
wrap-indicator = "󱞩"

# 行内显示 LSP 诊断 而不是右上角覆盖
[editor.inline-diagnostics]
# 主光标所在行行内显示的最低严重性
cursor-line = "warning"
# 其他行行内显示的最低严重性
other-lines = "error"

[keys.normal]
# Ctrl + s 保存
C-s = ":w"
# 下一个缓冲区
tab = ":bn"
# 上一个缓冲区
S-tab = ":bp"
# 将当前行向上移动
S-k = ["extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before"]
# 将当前行向下移动
S-j = ["extend_to_line_bounds", "delete_selection", "paste_after"]
# 将当前选择向左移(会换行)
S-h = ["delete_selection", "move_char_left", "paste_before"]
# 将当前选择向右移(会换行)
S-l = ["delete_selection", "paste_after"]
# 利用 yazi 成为 Helix 的文件选择器
C-y = [
  ':sh rm -f /tmp/unique-file',
  ':insert-output yazi %{buffer_name} --chooser-file=/tmp/unique-file',
  ':insert-output echo "\x1b[?1049h\x1b[?2004h" > /dev/tty',
  ':open %sh{cat /tmp/unique-file}',
  ':redraw',
  # 如果 Helix 和 Yazi 都启用了鼠标支持，它们将会冲突
  ':set mouse false',
  ':set mouse true',
]
[keys.insert]
j = { k = "normal_mode" }
[keys.select]
# 将当前选择向左移(会换行)
S-h = ["delete_selection", "move_char_left", "paste_before", "select_mode"]
# 将当前选择向右移(会换行)
S-l = ["delete_selection", "paste_after", "select_mode"]
